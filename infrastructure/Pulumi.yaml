name: project-starter-graphql
runtime:
  name: python
  options:
    virtualenv: venv
description: A Python program to deploy a containerized service on AWS
config:
  database_name:
    type: string
    description: Name of the database.
    default: projectStarter
  database_port:
    type: integer
    description: The port on which the DB accepts connections.
    default: 5432
  database_engine:
    type: string
    description: The database engine to use.
    default: postgres
  database_engine_version:
    type: string
    description: The database engine version to use.
    default: "15.3"
  database_storage_type:
    type: string
    description: The database storage type.
    default: gp2
  database_allocated_storage:
    type: integer
    description: The allocated storage in gibibytes.
    default: 20
  database_instance_class:
    type: string
    description: The instance type of the RDS instance.
    default: db.t3.medium
  database_username:
    type: string
    description: Username for the master DB user.
    default: projectStarter

  cache_port:
    type: integer
    description: Port number on which each of the cache nodes will accept connections.
    default: 6379
  cache_engine_version:
    type: string
    description: Version number of the cache engine to be used.
    default: "7.0"
  cache_node_type:
    type: string
    description: Instance class to be used.
    default: cache.t3.micro

  frontend_repository_name:
    type: string
    description: Name of the frontend repository.
    default: project-starter-graphql-frontend
  frontend_image_tag:
    type: string
    description: The frontend image tag.
    default: latest
  frontend_service_desired_count:
    type: integer
    description: Number of instances of the frontend task to place and keep running.
    default: 1
  frontend_task_cpu:
    type: string
    description: The hard limit of CPU units to present for the frontend task.
    default: "1024"
  frontend_task_memory:
    type: string
    description: The hard limit of memory (in MiB) to present to the frontend task.
    default: "2048"
  frontend_container_port:
    type: integer
    description: Exposed port of the frontend container.
    default: 80

  backend_repository_name:
    type: string
    description: Name of the backend repository.
    default: project-starter-graphql-backend
  backend_image_tag:
    type: string
    description: The backend image tag.
    default: latest
  backend_service_desired_count:
    type: integer
    description: Number of instances of the backend task to place and keep running.
    default: 1
  backend_task_cpu:
    type: string
    description: The hard limit of CPU units to present for the backend task.
    default: "1024"
  backend_task_memory:
    type: string
    description: The hard limit of memory (in MiB) to present to the backend task.
    default: "2048"
  backend_container_port:
    type: integer
    description: Exposed port of the backend container.
    default: 80

  proxy_repository_name:
    type: string
    description: Name of the proxy repository.
    default: project-starter-graphql-proxy
  proxy_image_tag:
    type: string
    description: The proxy image tag.
    default: latest
  proxy_service_desired_count:
    type: integer
    description: Number of instances of the proxy task to place and keep running.
    default: 1
  proxy_task_cpu:
    type: string
    description: The hard limit of CPU units to present for the proxy task.
    default: "1024"
  proxy_task_memory:
    type: string
    description: The hard limit of memory (in MiB) to present to the proxy task.
    default: "2048"
  proxy_container_port:
    type: integer
    description: Exposed port of the proxy container.
    default: 80

  celery_worker_service_desired_count:
    type: integer
    description: Number of instances of the celery worker task to place and keep running.
    default: 1
  celery_worker_task_cpu:
    type: string
    description: The hard limit of CPU units to present for the celery worker task.
    default: "1024"
  celery_worker_task_memory:
    type: string
    description: The hard limit of memory (in MiB) to present to the celery worker task.
    default: "2048"
  celery_worker_container_port:
    type: integer
    description: Exposed port of the celery worker container.
    default: 80
  celery_worker_container_command:
    type: array
    description: The command that's passed to the celery worker container.
    items:
      type: string
    default:
      - celery
      - --app
      - backend.celery:celery_app
      - worker
      - --loglevel
      - INFO

  celery_beat_service_desired_count:
    type: integer
    description: Number of instances of the celery beat task to place and keep running.
    default: 0 # Disabled celery beat as currently there are no scheduled tasks
  celery_beat_task_cpu:
    type: string
    description: The hard limit of CPU units to present for the celery beat task.
    default: "1024"
  celery_beat_task_memory:
    type: string
    description: The hard limit of memory (in MiB) to present to the celery beat task.
    default: "2048"
  celery_beat_container_port:
    type: integer
    description: Exposed port of the celery beat container.
    default: 80
  celery_beat_container_command:
    type: array
    description: The command that's passed to the celery beat container.
    items:
      type: string
    default:
      - celery
      - --app
      - backend.celery:celery_app
      - beat
      - --loglevel
      - INFO
