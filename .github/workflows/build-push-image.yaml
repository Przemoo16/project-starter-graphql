name: Build and Push Docker image
on:
  workflow_call:
    inputs:
      cache-key:
        description: "Key that is used together with the target to define the cache scope, see: https://docs.docker.com/build/cache/backends/gha/#scope"
        type: string
        required: true
      context:
        description: Docker context (path) to start build from
        type: string
      target:
        description: Target stage to build
        type: string
      registry:
        description: Container registry to push images
        type: string
      images:
        description: List of Docker images to use as base name for tags
        type: string
        required: true
      tags:
        description: List of tags as key-value pair attributes in CSV format
        type: string
        default: |
          type=raw,value=${{ github.run_id }}
      platforms:
        description: List of target platforms for build
        type: string
        default: |
          linux/amd64
    secrets:
      registry-username:
        description: Username to container registry
      registry-password:
        description: Password to container registry
    outputs:
      image-tag:
        description: Image tag for the built Docker image
        value: ${{ jobs.build-push-image.outputs.image-tag }}
jobs:
  build-push-image:
    name: Build and Push image
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.image-tag.outputs.image-tag }}

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.registry-username }}
          password: ${{ secrets.registry-password }}

      - name: Create image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.images }}
          tags: ${{ inputs.tags }}

      - name: Build and Push image
        uses: docker/build-push-action@v5
        env:
          CACHE_SCOPE: ${{ inputs.target && format('{0}-{1}', inputs.cache-key, inputs.target) || inputs.cache-key }}
        with:
          push: true
          context: ${{ inputs.context }}
          target: ${{ inputs.target }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ env.CACHE_SCOPE }}
          cache-to: type=gha,mode=max,scope=${{ env.CACHE_SCOPE }}
          platforms: ${{ inputs.platforms }}

      - name: Output the primary image tag
        id: image-tag
        run: echo "image-tag=${{ steps.meta.outputs.version }}" >> $GITHUB_OUTPUT
        shell: bash
