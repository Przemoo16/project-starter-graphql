name: Run E2E Tests
on:
  pull_request:
    paths:
      - backend/**
      - frontend/**
      - proxy/**
      - e2e/**
  push:
    branches:
      - main
    paths:
      - backend/**
      - frontend/**
      - proxy/**
      - e2e/**
jobs:
  set-context:
    name: Set context
    runs-on: ubuntu-latest
    outputs:
      backend-image: ${{ steps.set-variables.outputs.backend-image }}
      frontend-image: ${{ steps.set-variables.outputs.frontend-image }}
      proxy-image: ${{ steps.set-variables.outputs.proxy-image }}
      e2e-image: ${{ steps.set-variables.outputs.e2e-image }}

    steps:
      - id: set-variables
        name: Set variables
        run: |
          echo "backend-image=ghcr.io/przemoo16/project-starter-graphql-backend" >> $GITHUB_OUTPUT
          echo "frontend-image=ghcr.io/przemoo16/project-starter-graphql-frontend" >> $GITHUB_OUTPUT
          echo "proxy-image=ghcr.io/przemoo16/project-starter-graphql-proxy" >> $GITHUB_OUTPUT
          echo "e2e-image=ghcr.io/przemoo16/project-starter-graphql-e2e" >> $GITHUB_OUTPUT

  build-push-backend-image:
    name: Build and push backend image
    needs: [set-context]

    permissions:
      contents: read
      packages: write

    uses: ./.github/workflows/build-push-image.yaml
    with:
      cache-key: backend
      context: "{{defaultContext}}:backend"
      images: ${{ needs.set-context.outputs.backend-image }}
      registry: ghcr.io
    secrets:
      registry-username: ${{ github.actor }}
      registry-password: ${{ secrets.GITHUB_TOKEN }}

  build-push-frontend-image:
    name: Build and push frontend image
    needs: [set-context]

    permissions:
      contents: read
      packages: write

    uses: ./.github/workflows/build-push-image.yaml
    with:
      cache-key: frontend
      context: "{{defaultContext}}:frontend"
      images: ${{ needs.set-context.outputs.frontend-image }}
      registry: ghcr.io
    secrets:
      registry-username: ${{ github.actor }}
      registry-password: ${{ secrets.GITHUB_TOKEN }}

  build-push-proxy-image:
    name: Build and push proxy image
    needs: [set-context]

    permissions:
      contents: read
      packages: write

    uses: ./.github/workflows/build-push-image.yaml
    with:
      cache-key: proxy
      context: "{{defaultContext}}:proxy"
      images: ${{ needs.set-context.outputs.proxy-image }}
      registry: ghcr.io
    secrets:
      registry-username: ${{ github.actor }}
      registry-password: ${{ secrets.GITHUB_TOKEN }}

  build-push-e2e-image:
    name: Build and push e2e image
    needs: [set-context]

    permissions:
      contents: read
      packages: write

    uses: ./.github/workflows/build-push-image.yaml
    with:
      cache-key: e2e
      context: "{{defaultContext}}:e2e"
      images: ${{ needs.set-context.outputs.e2e-image }}
      registry: ghcr.io
    secrets:
      registry-username: ${{ github.actor }}
      registry-password: ${{ secrets.GITHUB_TOKEN }}

  run-e2e-tests:
    name: Run e2e tests
    runs-on: ubuntu-latest
    needs:
      [
        set-context,
        build-push-backend-image,
        build-push-frontend-image,
        build-push-proxy-image,
        build-push-e2e-image,
      ]

    permissions:
      contents: read
      packages: read

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run e2e tests
        run: |
          BACKEND_IMAGE=${{ needs.set-context.outputs.backend-image }}:${{ needs.build-push-backend-image.outputs.image-tag }} \
          FRONTEND_IMAGE=${{ needs.set-context.outputs.frontend-image }}:${{ needs.build-push-frontend-image.outputs.image-tag }} \
          PROXY_IMAGE=${{ needs.set-context.outputs.proxy-image }}:${{ needs.build-push-proxy-image.outputs.image-tag }} \
          E2E_IMAGE=${{ needs.set-context.outputs.e2e-image }}:${{ needs.build-push-e2e-image.outputs.image-tag }} \
          make e2e-test
        shell: bash
