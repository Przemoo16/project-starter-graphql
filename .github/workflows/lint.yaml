name: Lint
on:
  pull_request:
jobs:
  lint:
    name: Run linter
    runs-on: ubuntu-latest
    env:
      BACKEND_IMAGE: project-starter-graphql-backend:${{ github.run_id }}
      FRONTEND_IMAGE: project-starter-graphql-frontend:${{ github.run_id }}

    permissions:
      contents: read

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install pre-commit
        run: pip install pre-commit
        shell: bash

      - name: Restore pre-commit cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit/
          key: ${{ runner.os }}-${{ env.pythonLocation }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      # FIXME: Running mypy against the pulumi is super slow. Using cache to speed it
      # up. It utilizes the restore-keys to always update the existing cache:
      # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache
      - name: Restore mypy cache
        uses: actions/cache@v3
        with:
          path: ./.mypy_cache
          key: ${{ runner.os }}-${{ env.pythonLocation }}-mypy-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-${{ env.pythonLocation }}-mypy

      - name: Restore infrastructure venv cache
        id: infrastructure-venv-cache
        uses: actions/cache@v3
        with:
          path: ./infrastructure/venv
          key: ${{ runner.os }}-${{ env.pythonLocation }}-infrastructure-venv-${{ hashFiles('./infrastructure/requirements.txt') }}

      - name: Create infrastructure venv
        if: steps.infrastructure-venv-cache.outputs.cache-hit != 'true'
        run: |
          python -m venv ./infrastructure/venv
          ./infrastructure/venv/bin/pip install -r ./infrastructure/requirements.txt
        shell: bash

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend image
        uses: docker/build-push-action@v5
        with:
          load: true
          context: "{{defaultContext}}:backend"
          target: dev
          tags: ${{ env.BACKEND_IMAGE }}
          cache-from: type=gha,scope=backend-dev
          cache-to: type=gha,mode=max,scope=backend-dev
          platforms: linux/amd64

      - name: Build frontend image
        uses: docker/build-push-action@v5
        with:
          load: true
          context: "{{defaultContext}}:frontend"
          target: dev
          tags: ${{ env.FRONTEND_IMAGE }}
          cache-from: type=gha,scope=frontend-dev
          cache-to: type=gha,mode=max,scope=frontend-dev
          platforms: linux/amd64

      - name: Create env file from the template
        run: cp ./.env.template ./.env
        shell: bash

      - name: Run linter
        run: BACKEND_IMAGE=${{ env.BACKEND_IMAGE }} FRONTEND_IMAGE=${{ env.FRONTEND_IMAGE }} make lint
        shell: bash
